apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: airflow
spec:
  template:
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["t3a.xlarge", "t3a.2xlarge"]
        - key: topology.kubernetes.io/zone
          operator: In
          values: ["ap-northeast-2a", "ap-northeast-2c"]
      nodeClassRef:
        kind: EC2NodeClass
        name: airflow
        group: karpenter.k8s.aws
      expireAfter: Never
  limits:
    cpu: 36
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 1m
  weight: 50
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: airflow-spot
spec:
  template:
    spec:
      requirements:
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["t3a.xlarge"]
        - key: topology.kubernetes.io/zone
          operator: In
          values: ["ap-northeast-2a", "ap-northeast-2c"]
      nodeClassRef:
        kind: EC2NodeClass
        name: airflow
        group: karpenter.k8s.aws
      expireAfter: Never
  limits:
    cpu: 80
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 1m
  weight: 50
  ---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: airflow
spec:
  amiFamily: AL2 # Amazon Linux 2
  userData: |
    #!/bin/bash
    Content-Type: multipart/mixed; boundary="//"
    MIME-Version: 1.0
    --//
    Content-Type: text/cloud-config; charset="us-ascii"
    MIME-Version: 1.0
    Content-Transfer-Encoding: 7bit
    Content-Disposition: attachment; filename="cloud-config.txt"
    #cloud-config
    cloud_final_modules:
    - [scripts-user, always]
    --//
    Content-Type: text/x-shellscript; charset="us-ascii"
    MIME-Version: 1.0
    Content-Transfer-Encoding: 7bit
    Content-Disposition: attachment; filename="userdata.txt"
    #!/bin/bash
    # instance info ~~   

  role: "node_group_role" # replace with your karpenter node role
  subnetSelectorTerms:
    - tags:
        Name: "eks_prod_private_*"
  securityGroupSelectorTerms:
    - tags:
        Name: "eks_prod_node_sg"
  amiSelectorTerms:
    - id: $AMI
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 30Gi
        volumeType: gp3
        encrypted: true
  detailedMonitoring: false
